(module x11-xlib)

(import macros)
(import derivations)
(import variant)
(import bitset-enum)

(namespace x11
  (def Window      (macro extern (void) (q uint64)))
  (def Colormap    (macro extern (void) (q uint64)))
  (def BorderPixel (macro extern (void) (q uint64)))
  (def InputMask   (macro extern (void) (q int64)))
  (def Cursor      (macro extern (void) (q uint64)))
  (def Time        (macro extern (void) (q uint64)))
  (def XID         (macro extern (void) (q uint64)))
  (def Atom        (macro extern (void) (q uint64)))

  (def-bitset-enum KeyMask extern uint
    (UnusedMask
     ShiftMask LockMask ControlMask
     Mod1Mask Mod2Mask Mod3Mask Mod4Mask Mod5Mask))

  (def-bitset-enum InputEventMask extern uint
    (NoEventMask
     KeyPressMask KeyReleaseMask
     ButtonPressMask ButtonReleaseMask
     EnterWindowMask LeaveWindowMask
     PointerMotionMask PointerMotionHintMask
     Button1MotionMask Button2MotionMask
     Button3MotionMask Button4MotionMask
     Button5MotionMask ButtonMotionMask
     KeymapStateMask ExposureMask
     VisibilityChangeMask StructureNotifyMask
     ResizeRedirectMask SubstructureNotifyMask
     SubstructureRedirectMask FocusChangeMask
     PropertyChangeMask ColormapChangeMask
     OwnerGrabButtonMask))

  (def Detail (enum extern int
    (Above Below TopIf BottomIf Opposite)))

  (def-bitset-enum CWValueMask extern uint64
    (CWUnused CWX CWY CWWidth CWHeight CWBorderWidth CWSibling CWStackMode))

  (def RevertOption (enum extern int
    (RevertToNone
     RevertToPointerRoot
     RevertToParent)))

  (def WindowMapState (enum extern int
    (IsUnmapped
     IsUnviewable
     IsViewable)))

  (def Screen (struct extern
    ((_unused (array-of 16 uint8))
     (root (Window))
     (width int)
     (height int)
     (mwidth int)
     (mheight int)
     (ndepths int)
     (depths (p void))
     (root-depth int)
     (root-visual (p void))
     (gc (p void))
     (colormap (Colormap))
     (white-pixel (BorderPixel))
     (black-pixel (BorderPixel))
     (max-maps int)
     (min-maps int)
     (backing-store int)
     (save-unders int)
     (root-input-mask (InputMask)))))

  (def Display (struct extern
    ((_unused (array-of 224 uint8))
     (default-screen int)
     (nscreens int)
     (screens (p Screen))
     (_unused2 (array-of 4440 uint8)))))

  (def WindowAttributes (struct extern
    ((x int)
     (y int)
     (width int)
     (height int)
     (border-width int)
     (depth int)
     (visual (p void))
     (root (Window))
     (class int)
     (bit-gravity int)
     (win-gravity int)
     (backing-store int)
     (backing-planes uint64)
     (backing-pixel uint64)
     (save-under int)
     (colormap (Colormap))
     (map-installed int)
     (map-state WindowMapState)
     (all-event-masks int64)
     (your-event-mask int64)
     (do-not-propagate-mask int64)
     (override-redirect int)
     (screen (p Screen)))))

  (def padding (struct intern ((a (array-of 188 char)))))

  (def-variant Event
    (Unused1
     Unused2
     (KeyPressEvent ((serial uint64)
                     (send-event int)
                     (display (p Display))
                     (window (Window))
                     (root (Window))
                     (subwindow (Window))
                     (time (Time))
                     (x int)
                     (y int)
                     (x-root int)
                     (y-root int)
                     (state KeyMask)
                     (keycode uint)
                     (same-screen int)))
     (KeyReleaseEvent ((serial uint64)
                       (send-event int)
                       (display (p Display))
                       (window (Window))
                       (root (Window))
                       (subwindow (Window))
                       (time (Time))
                       (x int)
                       (y int)
                       (x-root int)
                       (y-root int)
                       (state KeyMask)
                       (keycode uint)
                       (same-screen int)))
     (ButtonPressEvent ((serial uint64)
                        (send-event int)
                        (display (p Display))
                        (window (Window))
                        (root (Window))
                        (subwindow (Window))
                        (time (Time))
                        (x int)
                        (y int)
                        (x-root int)
                        (y-root int)
                        (state KeyMask)
                        (button uint)
                        (same-screen int)))
     (ButtonReleaseEvent ((serial uint64)
                          (send-event int)
                          (display (p Display))
                          (window (Window))
                          (root (Window))
                          (subwindow (Window))
                          (time (Time))
                          (x int)
                          (y int)
                          (x-root int)
                          (y-root int)
                          (state KeyMask)
                          (button uint)
                          (same-screen int)))
     MotionNotify
     (EnterWindowEvent ((serial uint64)
                        (send-event int)
                        (display (p Display))
                        (window (Window))
                        (root (Window))
                        (subwindow (Window))
                        (time (Time))
                        (x int)
                        (y int)
                        (x-root int)
                        (y-root int)
                        (mode int)
                        (detail int)
                        (same-screen int)
                        (focus int)
                        (state KeyMask)))
     LeaveNotify
     FocusIn
     FocusOut
     KeymapNotify
     Expose
     GraphicsExpose
     NoExpose
     VisibilityNotify
     CreateNotify
     (DestroyWindowEvent ((serial uint64)
                          (send-event int)
                          (display (p Display))
                          (event (Window))
                          (window (Window))))
     UnmapNotify
     (MapNotifyEvent ((serial uint64)
                      (send-event int)
                      (display (p Display))
                      (event (Window))
                      (window (Window))
                      (override-redirect int)))
     (MapRequestEvent ((serial uint64)
                       (send-event int)
                       (display (p Display))
                       (event (Window))
                       (window (Window))))
     ReparentNotify
     ConfigureNotifyEvent
     (ConfigureRequestEvent ((serial uint64)
                             (send-event int)
                             (display (p Display))
                             (parent (Window))
                             (window (Window))
                             (x int)
                             (y int)
                             (width int)
                             (height int)
                             (border-width int)
                             (above (Window))
                             (detail Detail)
                             (value-mask CWValueMask)))
     GravityNotify
     ResizeRequest
     CirculateNotify
     CirculateRequest
     PropertyNotify
     SelectionClear
     SelectionRequest
     SelectionNotify
     ColormapNotify
     ClientMessage
     MappingNotify
     (GenericEvent ((_unused padding)))))

  (def WindowChanges (struct extern
    ((x int)
     (y int)
     (width int)
     (height int)
     (border-width int)
     (sibling (Window))
     (stack-mode int))))

  (def ErrorEvent (struct extern
    ((type int)
     (display (p Display))
     (resourceid (XID))
     (serial uint64)
     (error-code uint64)
     (request-code uint64)
     (minor-code uint64))))

  (def ClientMessageEvent (struct extern
    ((type int)
     (serial uint64)
     (send-event int)
     (display (p Display))
     (window (Window))
     (message-type (Atom))
     (format int)
     (data (array-of 5 uint64))))))

(using-namespace x11

(def XOpenDisplay
  (fn extern-c (p Display) ((n (p (const char))))))
(def XStringToKeysym
  (fn extern-c uint ((str (p (const char))))))
(def XKeysymToKeycode
  (fn extern-c uint ((dpy (p Display))
                     (keysym uint))))
(def XGrabKey
  (fn extern-c void ((dpy (p Display))
                     (keycode uint)
                     (modifiers KeyMask)
                     (grab-window (Window))
                     (owner-events int)
                     (pointer-mode int)
                     (keyboard-mode int))))
(def XGrabButton
  (fn extern-c void ((dpy (p Display))
                     (button int)
                     (modifiers uint)
                     (grab-window (Window))
                     (owner-events int)
                     (event-mask uint)
                     (pointer-mode int)
                     (keyboard-mode int)
                     (confine-to (Window))
                     (cursor (Cursor)))))
(def XGrabPointer
  (fn extern-c void ((dpy (p Display))
                     (grab-window (Window))
                     (owner-events int)
                     (event-mask uint)
                     (pointer-mode int)
                     (keyboard-mode int)
                     (confine-to (Window))
                     (cursor (Cursor))
                     (time (Time)))))
(def XCheckTypedEvent
  (fn extern-c bool ((dpy (p Display))
                     (event-type int)
                     (event-return (p Event)))))
(def XMoveResizeWindow
  (fn extern-c void ((dpy (p Display))
                     (w (Window))
                     (x int)
                     (y int)
                     (width uint)
                     (height uint))))
(def XRaiseWindow
  (fn extern-c void ((dpy (p Display))
                     (w (Window)))))
(def XLowerWindow
  (fn extern-c void ((dpy (p Display))
                     (w (Window)))))
(def XGetWindowAttributes
  (fn extern-c void ((dpy (p Display))
                     (w (Window))
                     (window-attributes-return (p WindowAttributes)))))
(def XNextEvent
  (fn extern-c void ((dpy (p Display))
                     (event-return (p Event)))))
(def XSelectInput
  (fn extern-c void ((dpy (p Display))
                     (w (Window))
                     (event-mask InputEventMask))))
(def XUngrabPointer
  (fn extern-c int ((dpy (p Display))
                     (time (Time)))))
(def XQueryTree
  (fn extern-c int ((dpy (p Display))
                    (w (Window))
                    (root-return (p (Window)))
                    (parent-return (p (Window)))
                    (children-return (p (p (Window))))
                    (nchildren-return (p uint)))))
(def XDestroyWindow
  (fn extern-c void ((dpy (p Display))
                     (w (Window)))))
(def XSetInputFocus
  (fn extern-c void ((dpy (p Display))
                     (focus (Window))
                     (revert-to RevertOption)
                     (time (Time)))))
(def XGetInputFocus
  (fn extern-c void ((dpy (p Display))
                     (focus-return (p (Window)))
                     (revert-to-return (p RevertOption)))))
(def XSetWindowBorder
  (fn extern-c void ((dpy (p Display))
                     (w (Window))
                     (border-pixel (BorderPixel)))))
(def XConfigureWindow
  (fn extern-c void ((dpy (p Display))
                     (w (Window))
                     (value-mask CWValueMask)
                     (values (p WindowChanges)))))
(def XGetGeometry
  (fn extern-c int ((dpy (p Display))
                    (d (Window))
                    (root-return (p (Window)))
                    (x-return (p int))
                    (y-return (p int))
                    (width-return (p uint))
                    (height-return (p uint))
                    (border-width-return (p uint))
                    (depth-return (p uint)))))
(def XMapWindow
  (fn extern-c void ((dpy (p Display))
                     (w (Window)))))
(def XUnmapWindow
  (fn extern-c void ((dpy (p Display))
                     (w (Window)))))

(def XSetErrorHandler
  (fn extern-c (p (fn int ((display (p Display))
                           (ev-error (p ErrorEvent)))))
    ((handler (p (fn int ((display (p Display))
                          (ev-error (p ErrorEvent)))))))))

(def XGetWMProtocols
  (fn extern-c int ((dpy (p Display))
                    (w (Window))
                    (protocols-return (p (p (Atom))))
                    (count-return (p int)))))

(def XInternAtom
  (fn extern-c (Atom) ((dpy (p Display))
                       (atom-name (p (const char)))
                       (only-if-exists bool))))

(def XGetAtomName
  (fn extern-c (p (const char)) ((dpy (p Display))
                                 (atom (Atom)))))

(def XSendEvent
  (fn extern-c int ((dpy (p Display))
                    (w (Window))
                    (propagate bool)
                    (event-mask int64)
                    (event-send (p Event))))))

(namespace x11
  (def grab-mode-async   (var extern int    1))
  (def owner-events-true (var extern int    1))
  (def current-time      (var extern uint64 0))

  (def enter-notify      (var extern int 7))
  (def map-notify        (var extern int 19))
  (def client-message    (var extern int 33))

  (def none              (var extern int 0))
  (def no-window         (var extern (Window) 0))
  (def pointer-root      (var extern (Window) 1))
  (def no-cursor         (var extern (Cursor) 0))

  (def open-display
    (fn extern (p Display) ((n (p (const char))))
      (XOpenDisplay n)))

  (def default-screen
    (fn extern int ((dpy (p Display)))
      (@:@ dpy default-screen)))

  (def screen-of-display
    (fn extern (p Screen) ((dpy (p Display))
                           (scr int))
      ($ (@:@ dpy screens) scr)))

  (def default-root-window
    (fn extern (Window) ((dpy (p Display)))
      (@:@ (screen-of-display dpy (default-screen dpy)) root)))

  (def black-pixel
    (fn extern (BorderPixel) ((dpy (p Display)))
      (@:@ (screen-of-display dpy (default-screen dpy)) black-pixel)))

  (def white-pixel
    (fn extern (BorderPixel) ((dpy (p Display)))
      (@:@ (screen-of-display dpy (default-screen dpy)) white-pixel)))

  (def string-to-keysym
    (fn extern uint ((str (p (const char))))
      (XStringToKeysym str)))

  (def keysym-to-keycode
    (fn extern uint ((dpy (p Display)) (keysym uint))
      (XKeysymToKeycode dpy keysym)))

  (def grab-key
    (fn extern void ((dpy (p Display))
                     (keycode uint)
                     (modifiers KeyMask)
                     (grab-window (Window))
                     (owner-events int)
                     (pointer-mode int)
                     (keyboard-mode int))
      (XGrabKey dpy keycode modifiers grab-window owner-events
                pointer-mode keyboard-mode)))

  (def grab-button
    (fn extern void ((dpy (p Display))
                     (button int)
                     (modifiers uint)
                     (grab-window (Window))
                     (owner-events int)
                     (event-mask uint)
                     (pointer-mode int)
                     (keyboard-mode int)
                     (confine-to (Window))
                     (cursor (Cursor)))
      (XGrabButton dpy button modifiers grab-window owner-events
                   event-mask pointer-mode keyboard-mode confine-to
                   cursor)))

  (def grab-pointer
    (fn extern void ((dpy (p Display))
                     (grab-window (Window))
                     (owner-events int)
                     (event-mask uint)
                     (pointer-mode int)
                     (keyboard-mode int)
                     (confine-to (Window))
                     (cursor (Cursor))
                     (time (Time)))
      (XGrabPointer dpy grab-window owner-events event-mask
                    pointer-mode keyboard-mode confine-to cursor
                    time)))

  (def check-typed-event
    (fn extern bool ((dpy (p Display))
                     (event-type int)
                     (event-return (p Event)))
      (XCheckTypedEvent dpy event-type event-return)))

  (def move-resize-window
    (fn extern void ((dpy (p Display))
                     (w (Window))
                     (x int)
                     (y int)
                     (width uint)
                     (height uint))
      (XMoveResizeWindow dpy w x y width height)))

  (def raise-window
    (fn extern void ((dpy (p Display))
                     (w (Window)))
      (XRaiseWindow dpy w)))

  (def lower-window
    (fn extern void ((dpy (p Display))
                     (w (Window)))
      (XLowerWindow dpy w)))

  (def get-window-attributes
    (fn extern void ((dpy (p Display))
                     (w (Window))
                     (window-attributes-return (p WindowAttributes)))
      (XGetWindowAttributes dpy w window-attributes-return)))

  (def next-event
    (fn extern void ((dpy (p Display))
                     (event-return (p Event)))
      (XNextEvent dpy event-return)))

  (def select-input
    (fn extern void ((dpy (p Display))
                     (w (Window))
                     (event-mask InputEventMask))
      (XSelectInput dpy w event-mask)))

  (def set-input-focus
    (fn extern void ((dpy (p Display))
                     (focus (Window))
                     (revert-to RevertOption)
                     (time (Time)))
      (XSetInputFocus dpy focus revert-to time)))

  (def get-input-focus
    (fn extern void ((dpy (p Display))
                     (focus-return (p (Window)))
                     (revert-to-return (p RevertOption)))
      (XGetInputFocus dpy focus-return revert-to-return)))

  (def query-tree
    (fn extern int ((dpy (p Display))
                    (w (Window))
                    (root-return (p (Window)))
                    (parent-return (p (Window)))
                    (children-return (p (p (Window))))
                    (nchildren-return (p uint)))
      (XQueryTree dpy w root-return parent-return
                  children-return nchildren-return)))

  (def destroy-window
    (fn extern void ((dpy (p Display))
                     (w (Window)))
      (XDestroyWindow dpy w)))

  (def map-window
    (fn extern void ((dpy (p Display))
                     (w (Window)))
      (XMapWindow dpy w)))

  (def unmap-window
    (fn extern void ((dpy (p Display))
                     (w (Window)))
      (XUnmapWindow dpy w)))

  (def get-geometry
    (fn extern int ((dpy (p Display))
                    (d (Window))
                    (root-return (p (Window)))
                    (x-return (p int))
                    (y-return (p int))
                    (width-return (p uint))
                    (height-return (p uint))
                    (border-width-return (p uint))
                    (depth-return (p uint)))
      (XGetGeometry dpy d root-return x-return
                    y-return width-return height-return
                    border-width-return depth-return)))

  (def set-window-border
    (fn extern void ((dpy (p Display))
                     (w (Window))
                     (border-pixel (BorderPixel)))
      (XSetWindowBorder dpy w border-pixel)))

  (def configure-window
    (fn extern void ((dpy (p Display))
                     (w (Window))
                     (value-mask CWValueMask)
                     (values (p WindowChanges)))
      (XConfigureWindow dpy w value-mask values)))

  (def ungrab-pointer
    (fn extern int ((dpy (p Display))
                    (time (Time)))
      (XUngrabPointer dpy time)))

  (def set-error-handler
    (fn extern (p (fn int ((display (p Display))
                           (ev-error (p ErrorEvent)))))
      ((handler (p (fn int ((display (p Display))
                            (ev-error (p ErrorEvent)))))))
        (XSetErrorHandler handler)))

  (def get-wm-protocols
    (fn extern int ((dpy (p Display))
                    (w (Window))
                    (protocols-return (p (p (Atom))))
                    (count-return (p int)))
      (XGetWMProtocols dpy w protocols-return count-return)))

  (def intern-atom
    (fn extern (Atom) ((dpy (p Display))
                       (atom-name (p (const char)))
                       (only-if-exists bool))
      (XInternAtom dpy atom-name only-if-exists)))

  (def get-atom-name
    (fn extern (p (const char)) ((dpy (p Display))
                                 (atom (Atom)))
      (XGetAtomName dpy atom)))

  (def send-event
    (fn extern int ((dpy (p Display))
                    (w (Window))
                    (propagate bool)
                    (event-mask int64)
                    (event-send (p Event)))
      (XSendEvent dpy w propagate event-mask event-send))))
